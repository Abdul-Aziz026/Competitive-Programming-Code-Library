
const int M = 2e5+2;
int n, d[M], Table[20][M], logs[M] ;

void compute_logs(){
    logs[1] = 0;
    for(int i=2;i<=200000;i++){
        logs[i] = logs[i/2]+1;
    }
}

void sparsh_table() {
    for (int i=1;i<=n;++i) Table[0][i] = d[i] ;
    for (int r=1;(1<<r)<=n;++r) {
        for (int i=1;i+(1<<r)-1 <= n;++i) {
            int x = Table[r-1][i] ;
            int y = Table[r-1][i+(1<<(r-1))] ;
            Table[r][i] = __gcd(x, y) ;
        }
    }
}

int query(int i, int j){
    int l = logs[j-i+1];
    int x = Table[l][i] ; 
    int y = Table[l][j-(1<<l)+1];
    return __gcd(x, y);
}
