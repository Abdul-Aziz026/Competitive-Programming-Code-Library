
struct DSU { 
    vector<int> par, siz ; 

    DSU(int n) : par(n, -1), siz(n, 1) { } 

    int root(int x) { 
        if (par[x] == -1) return x; 
        else return par[x] = root(par[x]); 
    } 

    bool issame(int x, int y) { 
        return root(x) == root(y); 
    } 

    void add(int x, int y) { 
        x = root(x); y = root(y); 
        if (x == y) return ; 
        if (siz[x] < siz[y]) swap(x, y); 
        par[y] = x; 
        siz[x] += siz[y]; 
    } 

    int size(int x) { 
        return siz[root(x)]; 
    } 
}; 

