/*...Bismillahir Rahmanir Rahim...*/
// #pragma GCC optimize ("Ofast,unroll-loops")
// #pragma GCC target ("avx2")
#include <bits/stdc++.h>
using namespace std;
 
//debug..........
#ifdef Abdul_Aziz
#include "debug.cpp"
#else
#define dbg(x...)
#endif
 
#define   int  long long
#define   ll   long long
#define   ld   long double
#define   pb   push_back
#define   vi   vector<int>
#define   bitcount(x)  (int)__builtin_popcount(x)
#define   fast  ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0)
#define   sz(x)  (int)x.size()
#define   all(a) (a).begin(),(a).end()
#define   Yes  cout << "YES\n"
#define   No  cout << "NO\n"
#define   ff   first
#define   ss   second
#define   endl  "\n"
#define   pi   acos(-1.0)
#define   pii  pair<int,int>
#define   lcm(a,b) (a/__gcd(a, b)*b)
 
const int  mod = 998244353 ;
const int N = 200001 ;
const int inf = 2147483647 ;
 
vector <int> g[N], color(N), ans(N);
 
void dfs(int u, int baba, map<int, int> &cnt) {
	for (auto child: g[u]) {
		if (child == baba) continue;
		map <int, int> cur;
		dfs(child, u, cur);
		if (sz(cur) > sz(cnt)) {
			swap(cnt, cur);
		}
		for (auto &ii: cur) {
			cnt[ii.ff] = 1;
		}
	}
	cnt[color[u]] = 1;
	ans[u] = sz(cnt);
}
 
inline void solve() {
    int n ; cin >> n ;
    for (int i = 1; i <= n; ++i) {
    	cin >> color[i] ;
    	g[i].clear();
    }
    int  x, y;
    for (int i = 1; i < n; ++i) {
    	cin >> x >> y ;
    	g[x].pb(y);
    	g[y].pb(x);
    }
    map <int, int> cnt;
    dfs(1, 0, cnt);
    for (int i = 1; i <= n; ++i) {
    	cout << ans[i] << " " ;
    }
    cout << endl;
}
 
signed main()
{
    fast ;
    int t = 1 ; // cin >> t ;
    while (t--) solve() ;
    return 0 ;
}
