
 
#include <iostream>
using namespace std; 

#define int long long

int bigmod(int a,int p,int mod){
    if (p==0) return 1;
    if (p&1){
        int p1=a%mod;
        int p2 = bigmod(a,p-1,mod);
        return (p1*p2)%mod;
    }
    int p1=bigmod(a,p/2,mod);
    return (p1*p1)%mod;
}


signed main()
{
    /*
        y^-1 finding algorithm fermat's theorum : 
        --> (y * y^p-2) mod p = 1 [p here prime and p>y] 
        --> (y^p-2 mod p = 1/y ) [1/y = y^-1]
        so,  1/y = (y^p-2) mod p. 
        
        4/2 = 2 using fermat's theorum we calculate here 4/2 

    */
    int p=1000000007;
    cout << (4*bigmod(2,p-2,p))%p << endl;
    return 0;
}

